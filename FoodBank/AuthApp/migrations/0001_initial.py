# Generated by Django 5.2.1 on 2025-05-23 21:06

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[('DONOR', 'Donor'), ('FOODBANK', 'Foodbank'), ('RECIPIENT', 'Recipient')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('full_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('location', models.CharField(help_text='County/Town', max_length=255)),
                ('preferred_donor_type', models.CharField(choices=[('FOOD', 'Food'), ('FUNDS', 'Funds'), ('OTHERS', 'Others')], max_length=10)),
                ('donation_preference', models.CharField(choices=[('SUBSISTENCE', 'Subsistence'), ('FREE', 'Free')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Foodbank',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('foodbank_name', models.CharField(help_text='Charity organization name', max_length=255)),
                ('phone_number', models.CharField(max_length=20)),
                ('contact_person', models.CharField(max_length=255)),
                ('picture', models.ImageField(blank=True, help_text='Upload a picture for the foodbank authority and urgent request', null=True, upload_to='foodbank_pictures/')),
                ('accepts_subsistence_donations', models.BooleanField(help_text='Required even at the subsistence will of a donor or not')),
            ],
        ),
        migrations.CreateModel(
            name='Recipient',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('full_name_or_organization', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=20)),
                ('contact_person', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('category', models.CharField(help_text='Requests & sometimes requests can be @ the liberty of the foodbank based on the donor donations', max_length=100)),
                ('donation_preference_status', models.CharField(default='Pending Foodbank Assessment', help_text='To be auto-converted â€” food can be donated for free or at a subsistence fee', max_length=100)),
            ],
        ),
    ]
